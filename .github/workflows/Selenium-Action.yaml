name: Run Selenium On GitHub Action
on:
  push:
    branches:
      - main
  schedule:
      - cron: "10 2 * * *"     # Runs every day at 2:10 AM UTC
      - cron: "10 14 * * *"    # Runs every day at 2:10 PM UTC
  workflow_dispatch:
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Installing package list
        run: apt list --installed    
      - name: Removing previous chrome instances on runner 
        run: sudo apt purge google-chrome-stable  
        
       # Need to fetch reqs if needed
      - name: Installing all necessary packages
        run: pip install -r requirements.txt
      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: Running the Python script
        run: python Selenium.py
      - name: Big5 to UTF8
        run: |
          python ReadFile.py auction.csv Big5 | tail -n +2 |head -n -5 > auction-utf8.csv # remove the first 1/last 5 line of the auction-utf8.csv

          python ReadFile.py 2024.csv Big5    | tail -n +2 |head -n -5 > 2024-utf8.csv
          python ReadFile.py 2023.csv Big5    | tail -n +2 |head -n -5 > 2023-utf8.csv
          #   python ReadFile.py 2022.csv Big5    | tail -n +2 |head -n -5 > 2022-utf8.csv
          #   python ReadFile.py 2021.csv Big5    | tail -n +2 |head -n -5 > 2021-utf8.csv
          python ReadFile.py 2020.csv Big5    | tail -n +2 |head -n -5 > 2020-utf8.csv
          python ReadFile.py 2019.csv Big5    | tail -n +2 |head -n -5 > 2019-utf8.csv
          python ReadFile.py 2018.csv Big5    | tail -n +2 |head -n -5 > 2018-utf8.csv
          python ReadFile.py 2017.csv Big5    | tail -n +2 |head -n -5 > 2017-utf8.csv

          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' auction-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2024-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2023-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2022-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2021-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2020-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2019-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2018-utf8.csv
          sed -i '1s/證券名稱/公司名稱/g; 1s/證券代號/股票代號/g' 2017-utf8.csv
      - name: CSV filter
        run: |
          cat auction-utf8.csv | python csv-filter.py > auction-utf8-filter.csv
          cat 2024-utf8.csv | python csv-filter.py > 2024-utf8-filter.csv          
          cat 2023-utf8.csv | python csv-filter.py > 2023-utf8-filter.csv
          cat 2022-utf8.csv | python csv-filter.py > 2022-utf8-filter.csv
          cat 2021-utf8.csv | python csv-filter.py > 2021-utf8-filter.csv
          cat 2020-utf8.csv | python csv-filter.py > 2020-utf8-filter.csv
          cat 2019-utf8.csv | python csv-filter.py > 2019-utf8-filter.csv
          cat 2018-utf8.csv | python csv-filter.py > 2018-utf8-filter.csv
          cat 2017-utf8.csv | python csv-filter.py > 2017-utf8-filter.csv
      - name: Read CSV and remove no need lines
        id: csv
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          csvfile=$(cat auction-utf8.csv)    
          echo "content<<$EOF" >> $GITHUB_OUTPUT
          echo "$csvfile"      >> $GITHUB_OUTPUT
          echo "$EOF"          >> $GITHUB_OUTPUT
      - name: Merge 2018 to now utf8-filter csv
        id: merge-csv
        run: |
          # python csv-merge.py
          csvstack auction-utf8-filter.csv 2024-utf8-filter.csv 2023-utf8-filter.csv 2022-utf8-filter.csv 2021-utf8-filter.csv 2020-utf8-filter.csv 2019-utf8-filter.csv 2018-utf8-filter.csv 2017-utf8-filter.csv> 2020-Now-utf8-filter.csv
          csvgrep -c "取消競價拍賣(流標或取消)" -m "Y" 2020-Now-utf8-filter.csv > cancel.csv
          csvgrep -c "取消競價拍賣(流標或取消)" -i -m "Y" 2020-Now-utf8-filter.csv | csvgrep -c "得標總金額(元)" -i -r '^(0|0\.0|0\.00)$' > auctioned.csv
          csvgrep -c "取消競價拍賣(流標或取消)" -i -m "Y" 2020-Now-utf8-filter.csv | csvgrep -c "得標總金額(元)" -r '^(0|0\.0|0\.00)$' > tobe-auctioned.csv
      - name: Lines count
        run: |
            python CountCSVLine.py TWSE_TPEX.json 2020-Now-utf8-filter.csv "TWSE+TPEX 競標公司"
            python CountCSVLine.py cancel.json cancel.csv "TWSE+TPEX 競標公司-取消"
            python CountCSVLine.py auctioned.json auctioned.csv "TWSE+TPEX 競標公司-完成"
            python CountCSVLine.py tobe-auctioned.json tobe-auctioned.csv "TWSE+TPEX 競標公司-未完成"
      #- name: Create MD
      #  uses: petems/csv-to-md-table-action@master
      #  id: csv-table-output
      #  with:
      #    csvinput: ${{ steps.csv.outputs.content }}  
      #
      #- name: Echo Markdown Table
      #  run: echo "${{steps.csv-table-output.outputs.markdown-table}}" > csv.md
      - name: Create MD
        id: csv-table-output
        run: |
          python csv-to-md.py auction-utf8.csv utf8 > auction-utf8.md
          python csv-to-md.py auction-utf8-filter.csv utf8 > auction-utf8-filter.md
          python csv-to-md.py 2024-utf8.csv utf8 > 2024-utf8.md
          python csv-to-md.py 2024-utf8-filter.csv utf8 > 2024-utf8-filter.md
          python csv-to-md.py 2023-utf8.csv utf8 > 2023-utf8.md
          python csv-to-md.py 2023-utf8-filter.csv utf8 > 2023-utf8-filter.md
          python csv-to-md.py 2022-utf8.csv utf8 > 2022-utf8.md
          python csv-to-md.py 2022-utf8-filter.csv utf8 > 2022-utf8-filter.md
          python csv-to-md.py 2021-utf8.csv utf8 > 2021-utf8.md
          python csv-to-md.py 2021-utf8-filter.csv utf8 > 2021-utf8-filter.md
          python csv-to-md.py 2020-utf8.csv utf8 > 2020-utf8.md
          python csv-to-md.py 2020-utf8-filter.csv utf8 > 2020-utf8-filter.md
          python csv-to-md.py 2019-utf8.csv utf8 > 2019-utf8.md
          python csv-to-md.py 2019-utf8-filter.csv utf8 > 2019-utf8-filter.md
          python csv-to-md.py 2018-utf8.csv utf8 > 2018-utf8.md
          python csv-to-md.py 2018-utf8-filter.csv utf8 > 2018-utf8-filter.md
          python csv-to-md.py 2017-utf8.csv utf8 > 2017-utf8.md
          python csv-to-md.py 2017-utf8-filter.csv utf8 > 2017-utf8-filter.md
          python csv-to-md.py 2020-Now-utf8-filter.csv utf8 > 2020-Now-utf8-filter.md

      - name: Get all changed on *.csv
        id: changed-csv-files
        uses: tj-actions/changed-files@v45
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.csv
      - name: List all changed files csv files if csv changed
        if: steps.changed-csv-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-csv-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            if [ "$file" = "2020-Now-utf8-filter.csv" ]; then
              echo "2020-Now-utf8-filter.csv:change!!"
            fi
          done
      - name: Repository Dispatch
        if: steps.changed-csv-files.outputs.any_changed == 'true'     
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.repository_dispatch }}
          repository: wenchiehlee/twstock
          event-type: 2020-Now-utf8-filter.csv
      #- name: Push generated MD pages to another repository
      #  uses: nkoppel/push-files-to-another-repository@v1.1.3
      #  env:
      #    API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      #  with:
      #    source-files: 'csv.md'
      #    destination-username: 'wenchiehlee'
      #    destination-repository: 'mkdocs'
      #    destination-directory: 'projects/my-project'
      #    commit-username: "github-actions[bot]"
      #    commit-email: "41898282+github-actions[bot]@users.noreply.github.com"
      #    #commit-message:
      - name: Commit and Push The Results From Python Selenium Action
        run: |
         git config --global user.name "github-actions[bot]"
         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git add -A
         git commit -m "⬆️ GitHub Actions Results added" || true
         git push || true
